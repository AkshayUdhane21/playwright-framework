<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="13" passed="13" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-10-10T14:41:37 IST" name="Surefire suite" finished-at="2025-10-10T14:41:38 IST" duration-ms="235">
    <groups>
    </groups>
    <test started-at="2025-10-10T14:41:37 IST" name="Surefire test" finished-at="2025-10-10T14:41:38 IST" duration-ms="235">
      <class name="tests.ApiTestExecutor">
        <test-method is-config="true" signature="setUpApiContext()[pri:0, instance:tests.ApiTestExecutor@75f95314]" started-at="2025-10-10T14:41:28 IST" name="setUpApiContext" finished-at="2025-10-10T14:41:37 IST" duration-ms="9205" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpApiContext -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.ApiTestExecutor@75f95314]" started-at="2025-10-10T14:41:37 IST" name="setup" finished-at="2025-10-10T14:41:37 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testBrowseTags()[pri:0, instance:tests.ApiTestExecutor@75f95314]" started-at="2025-10-10T14:41:37 IST" name="testBrowseTags" finished-at="2025-10-10T14:41:37 IST" duration-ms="101" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBrowseTags -->
        <test-method signature="testConvertDataValue()[pri:0, instance:tests.ApiTestExecutor@75f95314]" started-at="2025-10-10T14:41:37 IST" name="testConvertDataValue" finished-at="2025-10-10T14:41:37 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertDataValue -->
        <test-method signature="testConvertValue()[pri:0, instance:tests.ApiTestExecutor@75f95314]" started-at="2025-10-10T14:41:37 IST" name="testConvertValue" finished-at="2025-10-10T14:41:37 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertValue -->
        <test-method signature="testKafkaHasChanged()[pri:0, instance:tests.ApiTestExecutor@75f95314]" started-at="2025-10-10T14:41:37 IST" name="testKafkaHasChanged" finished-at="2025-10-10T14:41:38 IST" duration-ms="21" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testKafkaHasChanged -->
        <test-method signature="testKafkaProcessBrowseData()[pri:0, instance:tests.ApiTestExecutor@75f95314]" started-at="2025-10-10T14:41:38 IST" name="testKafkaProcessBrowseData" finished-at="2025-10-10T14:41:38 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testKafkaProcessBrowseData -->
        <test-method signature="testOpcConnect()[pri:0, instance:tests.ApiTestExecutor@75f95314]" started-at="2025-10-10T14:41:38 IST" name="testOpcConnect" finished-at="2025-10-10T14:41:38 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOpcConnect -->
        <test-method signature="testOpcConnectionStatus()[pri:0, instance:tests.ApiTestExecutor@75f95314]" started-at="2025-10-10T14:41:38 IST" name="testOpcConnectionStatus" finished-at="2025-10-10T14:41:38 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOpcConnectionStatus -->
        <test-method signature="testOpcInit()[pri:0, instance:tests.ApiTestExecutor@75f95314]" started-at="2025-10-10T14:41:38 IST" name="testOpcInit" finished-at="2025-10-10T14:41:38 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOpcInit -->
        <test-method signature="testReadNode()[pri:0, instance:tests.ApiTestExecutor@75f95314]" started-at="2025-10-10T14:41:38 IST" name="testReadNode" finished-at="2025-10-10T14:41:38 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadNode -->
        <test-method signature="testReadNode2()[pri:0, instance:tests.ApiTestExecutor@75f95314]" started-at="2025-10-10T14:41:38 IST" name="testReadNode2" finished-at="2025-10-10T14:41:38 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadNode2 -->
        <test-method signature="testReadValue()[pri:0, instance:tests.ApiTestExecutor@75f95314]" started-at="2025-10-10T14:41:38 IST" name="testReadValue" finished-at="2025-10-10T14:41:38 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadValue -->
        <test-method signature="testSubscribeToData()[pri:0, instance:tests.ApiTestExecutor@75f95314]" started-at="2025-10-10T14:41:38 IST" name="testSubscribeToData" finished-at="2025-10-10T14:41:38 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSubscribeToData -->
        <test-method signature="testWriteNode()[pri:0, instance:tests.ApiTestExecutor@75f95314]" started-at="2025-10-10T14:41:38 IST" name="testWriteNode" finished-at="2025-10-10T14:41:38 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWriteNode -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:tests.ApiTestExecutor@75f95314]" started-at="2025-10-10T14:41:38 IST" name="teardown" finished-at="2025-10-10T14:41:38 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="tearDownApiContext()[pri:0, instance:tests.ApiTestExecutor@75f95314]" started-at="2025-10-10T14:41:38 IST" name="tearDownApiContext" finished-at="2025-10-10T14:41:38 IST" duration-ms="21" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownApiContext -->
      </class> <!-- tests.ApiTestExecutor -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
