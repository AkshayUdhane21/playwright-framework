version: '3.8'

services:
  # Playwright Test Framework
  playwright-tests:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: playwright-test-runner
    environment:
      - TEST_ENV=${TEST_ENV:-local}
      - BROWSER=${BROWSER:-chromium}
      - HEADLESS=${HEADLESS:-true}
      - PARALLEL_THREADS=${PARALLEL_THREADS:-3}
      - DISPLAY=:99
    volumes:
      - ./test-output:/app/test-output
      - ./allure-results:/app/allure-results
      - ./reports:/app/reports
      - /dev/shm:/dev/shm
    depends_on:
      - mock-api
      - test-database
    networks:
      - test-network
    command: >
      sh -c "
        echo 'Starting Xvfb...' &&
        Xvfb :99 -screen 0 1920x1080x24 -ac +extension GLX +render -noreset &
        echo 'Waiting for services...' &&
        sleep 10 &&
        echo 'Running tests...' &&
        mvn test -Dtest.parallel.execution=true -Dtest.thread.count=${PARALLEL_THREADS:-3}
      "

  # Mock API Server for testing
  mock-api:
    image: wiremock/wiremock:2.35.0
    container_name: mock-api-server
    ports:
      - "8081:8080"
    volumes:
      - ./src/test/resources/wiremock:/home/wiremock
    command: --port 8080 --global-response-templating --verbose
    networks:
      - test-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/__admin/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Test Database
  test-database:
    image: postgres:13-alpine
    container_name: test-postgres
    environment:
      - POSTGRES_DB=testdb
      - POSTGRES_USER=testuser
      - POSTGRES_PASSWORD=testpass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - test-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U testuser -d testdb"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Kafka for message testing
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: test-kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    networks:
      - test-network
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "localhost:9092"]
      interval: 30s
      timeout: 10s
      retries: 3

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: test-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - test-network

  # Allure Report Server
  allure-server:
    image: frankescobar/allure-docker-service:latest
    container_name: allure-report-server
    ports:
      - "5050:5050"
    volumes:
      - ./allure-results:/app/allure-results
      - ./allure-reports:/app/default-reports
    environment:
      - CHECK_RESULTS_EVERY_SECONDS=3
      - KEEP_HISTORY=1
    networks:
      - test-network
    depends_on:
      - playwright-tests

  # Test Results Dashboard
  test-dashboard:
    image: nginx:alpine
    container_name: test-dashboard
    ports:
      - "8080:80"
    volumes:
      - ./test-output:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - test-network
    depends_on:
      - playwright-tests

volumes:
  postgres_data:

networks:
  test-network:
    driver: bridge


