{"uuid":"68b27a5e-a236-42ac-9875-532b1561d53a","historyId":"f7e9cf06a41c422104a71af37d6a1925","fullName":"tests.WriteDataServiceTest.testWriteNodeWithDifferentDataTypes","labels":[{"name":"package","value":"tests.WriteDataServiceTest"},{"name":"testClass","value":"tests.WriteDataServiceTest"},{"name":"testMethod","value":"testWriteNodeWithDifferentDataTypes"},{"name":"parentSuite","value":"Microservices API Test Suite"},{"name":"suite","value":"Write Data Service Tests"},{"name":"subSuite","value":"tests.WriteDataServiceTest"},{"name":"host","value":"Akshay-Udhane"},{"name":"thread","value":"29528@Akshay-Udhane.TestNG-tests-3(134)"},{"name":"framework","value":"testng"},{"name":"language","value":"java"}],"links":[],"name":"Test write node with different data types","status":"failed","statusDetails":{"known":false,"muted":false,"flaky":false,"message":"Should get valid response for Invalid node ID expected [true] but found [false]","trace":"java.lang.AssertionError: Should get valid response for Invalid node ID expected [true] but found [false]\r\n\tat org.testng.Assert.fail(Assert.java:99)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1037)\r\n\tat org.testng.Assert.assertTrue(Assert.java:45)\r\n\tat tests.WriteDataServiceTest.testWriteNodeWithDifferentDataTypes(WriteDataServiceTest.java:84)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)\r\n\tat org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)\r\n\tat org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)\r\n\tat org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)\r\n\tat org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)\r\n\tat org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:794)\r\n\tat org.testng.TestRunner.run(TestRunner.java:596)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:377)\r\n\tat org.testng.SuiteRunner.access$000(SuiteRunner.java:28)\r\n\tat org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)\r\n\tat org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)\r\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\r\n\tat java.base/java.lang.Thread.run(Thread.java:833)\r\n"},"stage":"finished","steps":[],"attachments":[],"parameters":[{"name":"arg2","value":"Invalid node ID"},{"name":"arg1","value":"123"},{"name":"arg0","value":"ns=999;s=InvalidNode"}],"start":1759815158900,"stop":1759815158908}